## Read/Query

- Do a query to see all the bounties
> db.bounties.find()
- Do a query to find the bounty whose client is `Time Bureau`
> db.bounties.find({ client: "Time Bureau" })
- Do a query to find the bounties who have been `captured`
> db.bounties.find({ captured: true })
- Do a query specific to the bounty you inserted
> db.bounties.find({ship: 'The Maid Marian'})
- Do a query to just return the names of all the bounties
> db.bounties.find({ship: 'The Maid Marian'})
## Remove

- Starbuck and the Captain have come to an understanding. Remove her record
> db.bounties.remove({name: 'Starbuck'})
- find and remove the duplicate record - be sure to JUST remove the one copy
> db.bounties.remove({name: 'Han Solo'}, {justOne: true})

## Update

Update `Sara Lance`'s name to be her superhero alias 'White Canary'
> db.bounties.update({name: 'Sara Lance'}, {name: 'White Canary'}
Update Rocket's ship to be `The Milano 2`
> db.bounties.update({name: 'Rocket'}, {ship: 'The Milano 2'})

### Intermediate Mongo

Check out the [Intermediate Mongo](https://gawdiseattle.gitbook.io/wdi/04-databases/mongo-intro/intermediate) lecture notes in the instructor notes directory. Follow through each of the explanations. Follow the commands and perform appropriate finds after each update call to see the results

- Find the bounties that are greater than `100000`
> db.bounties.find({reward: { $gt: 100000 } })
- Find the bounties that are less than `1000`
> db.bounties.find({reward: { $lt: 1000 } })
- Find the bounties that are less than or equal to `1000`
> db.bounties.find({reward: { $lte: 1000 } })

- Find the bounty with the hunter `Nebula`
> db.bounties.find({hunters: "Nebula"})
- Find the bounty with the ship `Waverider` OR `Serenity`
> db.bounties.find({ship: { $in: ['Waverider', 'Serenity'] } })
- Find the bounty who is not captured AND has whose client is `Ayesha High Priestess of the Sovereign`
> db.bounties.find({ $and: [ {captured: false}, {client: "Ayesha High Priestess of the Sovereign"} ] })
- Increase all the bounties by 333333
> db.bounties.update( {$inc: {reward: 333333}}, {multi: true})
- Multiply all the bounties by 2
> db.bounties.update({}, { $mul: {reward: 2} }, { multi: true })
- Add `Bobba Fett` as a hunter for `Malcolm Reynolds`
> db.bounties.update({name: 'Malcolm Reynolds'}, {$push: {hunters: 'Bobba Fett'}})
- Add `Bobba Fett` as a hunter for the one that has the ship `Waverider`
> db.bounties.update({ship: 'Waverider'}, {$push: {hunters: 'Bobba Fett'}})
- Find and remove `Dengar` the bounty hunter
> db.bounties.find( { hunters: "Dengar" } )
- Upsert is used with update method which creates a new document if the query does not retrieve any documents matching the query parameters.
- Try giving a `lastSeen` field to Han Solo, with the property `yesterday` (we haven't set his yet)
> db.bounties.update({name: "Han Solo"}, {$addFields: {lastSeen: "Yesterday"}{)
- Try giving all bounties that are not Han Solo a new field of `lastSeen` - with a value of `last week`
> db.bounties.updateMany({}, { $set: { lastSeen: "last week"}},{ upsert: false})